name: CI/CD - Laboratorio Reservas

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Compilar y Ejecutar Pruebas
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v3

      - name: Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Configurar variables de entorno
        run: echo "SPRING_DATA_MONGODB_URI=mongodb://localhost:27017/testdb" >> $GITHUB_ENV

      - name: Instalar dependencias
        run: mvn clean install -DskipTests

      - name: Ejecutar pruebas unitarias
        run: mvn test

      - name: Analizar c贸digo con SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=Laboratorio_Reservas -Dsonar.host.url=https://sonarqube.example.com

      - name: Publicar Reporte de Pruebas
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/surefire-reports/

  docker:
    name: Construir y Publicar Imagen Docker
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v3

      - name: Iniciar sesi贸n en Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construir imagen Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/laboratorio-reservas:latest .

      - name: Subir imagen a Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/laboratorio-reservas:latest

  deploy:
    name: Desplegar en Servidor
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Conectar al Servidor y Desplegar
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/laboratorio-reservas:latest
            docker stop laboratorio_reservas || true
            docker rm laboratorio_reservas || true
            docker run -d -p 8080:8080 --name laboratorio_reservas --env SPRING_DATA_MONGODB_URI=mongodb://${{ secrets.SERVER_MONGO_HOST }}/laboratorios ${{ secrets.DOCKER_USERNAME }}/laboratorio-reservas:latest
